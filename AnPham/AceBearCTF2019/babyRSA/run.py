n = 132991872691788324082134861997953579720626276400340540687013665099477551458348129102088618361745158673111757871083783880384786818716675179609957267487624993539275409316283860268944400754318665280566429956092526555947286266806591767802818223484766666271142927737412289284611614382748008696676464334157695348471

c = 51298575439582965784709335152059190835305126166438646589369499569428503835480418841408132266294091481013029021796067865137829386370176771358549523435135941877535688535317287350930103706346511719290416785053872504275498831270025102211793188751664805369414883387849038010293938521738911310864582949611581363258

a = 116622952696503724444465816906812927416603315297598995734109952470693593204299624097288573735780464942963720997719694033378973971604112334413336782598075611956878592757766346915810900585142701963781432186914454664547551508332077962977944352243565906344660561255453917679867097810681750809061744116605905787747

b = 46935581819524717607675319301313485106684889957138298327245990937934310422542055504175491111118389178173005337213903985686712577881019021348501335888175248295397612880683801733649468701485843002169345784241756189697901370624950199354359977266595488202827970067500373575114835718127956891051157026649793602861

e = 65537

# a = p^2019 (mod q)
# b = p+2019 (mod q)

m = pow(b-2019, 2019, n) - a

def gcd(a, b):
  while b != 0:
    a, b = b, a % b
  return a

q = gcd(m, n)
p = n // q
assert p * q == n, 'Something is wrong'

phi = (p-1)*(q-1)

d = -1
for i in range(100000000):
  if (i*phi + 1) % e == 0:
    d = (i*phi + 1) // e
    break

def decode(plaintext):
  hexVal = hex(plaintext)[2:-1]
  return hexVal.decode('hex')

plaintext = pow(c, d, n)
print(decode(plaintext))
