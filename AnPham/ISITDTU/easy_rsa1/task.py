n = 137709853388874260067664060306224801065880567280896538344708662296491187670268243771581008615887329285442080267493172576517227603581814922784005894668293664250883858847270414696279127204843462302026428548409668060539273696154323753582118715764251826181439387752900169898505518594134423187783089073450520527969
e = 85605944479801539190292577400294315989703364683792339737453887619652946907819548388390076584246192710348319524405250340541547224543819349494488596679810310694697763188201375896240755682682520811114377302206659716598003967368992125832908158096663258971132148617761060030524535044970322206572134828548118438019
c = 22066874366908131522623165919721031154048372827959879486746669804284618882326621205522887800063326155288431192110879403482210420111408801477749097399368616494107231276644736023482237804800287810317122448198973027350599454646050497733117161743355379588761228932055556016302337519814538743706899009493572298224

temporaryE = e
temporaryC = c

def getFactorization(e):
  i = 2
  res = []
  while (e > 1):
    while e % i == 0:
      res.append(i)
      e //= i
    i += 1
    if (i % 100000 == 0): print(res)
  return res

def kthroot(n, k):
  L, R, res = 0, n, 0
  while L <= R:
    M = (L+R)//2
    temp = n
    for i in range(k):
      temp //= M
    if temp >= 1:
      res = M
      L = M+1
    else:
      R = M-1
  return res

# factorized = getFactorization(e)
arr = [49177, 19]

e = e // 49177 // 19

def xgcd(a,b):
  prevx, x = 1, 0;  prevy, y = 0, 1
  while b:
    q, r = divmod(a,b)
    x, prevx = prevx - q*x, x
    y, prevy = prevy - q*y, y
    a, b = b, r
  return a, prevx, prevy

g, a, _ = xgcd(e, n)

print(e*a % n)

xxx = c

c = pow(c, a, n)

assert pow(c, e, n) == xxx, '?'

_, reverse19, _ = xgcd(19, n)
_, cprime, _ = xgcd(c, n)
_, reverse49177, _ = xgcd(49177, n)

c1 = pow(cprime, -reverse19, n)
c2 = pow(c, reverse49177, n)

g, a, b = xgcd(19, 49177)

_, cprime, _ = xgcd(c1, n)

plain = pow(c1, -a, n) * pow(c2, b, n) % n

print(pow(plain, temporaryE, n))
assert pow(plain, temporaryE, n) == temporaryC, 'nooo'
